{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/searchBar/searchBar.component.js","App.js","index.js"],"names":["Card","props","className","monster","name","alt","src","id","email","CardList","monsters","map","SearchBar","placeholder","handleChange","type","onChange","App","state","searchBar","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","console","log","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6RAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAW,iBAAhB,UACI,6BAAKD,EAAME,QAAQC,OACnB,qBAAKC,IAAM,YAAYC,IAAG,+BAA4BL,EAAME,QAAQI,GAA1C,4BAC1B,6BAAKN,EAAME,QAAQK,YCJlBC,G,KAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAR,GAAO,OACtB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQI,WCLzBK,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,qBAAKZ,UAAU,SAAf,SACI,uBAAOa,KAAK,SAASF,YAAaA,EAC9BG,SAAUF,QC6BXG,G,8DA5Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,UAAW,IAJD,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE7C,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA7BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,UACZQ,EAAmBjB,EAASkB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQC,KAAKyB,cAAcC,SAASX,EAAUY,wBAChD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,oBACrBC,aAAc,SAAAkB,GAAO,EAAKP,SAAS,CAAEN,UAAWa,EAAEC,OAAOC,QAAS,kBAAMC,QAAQC,IAAI,EAAKlB,aAC3F,cAAC,EAAD,CAAUR,SAAUiB,W,GAtBVU,IAAMC,YCFxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.574fc2a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) =>{\r\n    return(\r\n        <div className =\"card-container\">\r\n            <h2>{props.monster.name}</h2>\r\n            <img alt = \"mosnsters\" src = {`https://robohash.org/${props.monster.id}?set=set2?size=180x180`} />\r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster =>\r\n                (<Card key = {monster.id} monster = {monster} />))}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './searchBar.style.css';\r\n\r\nexport const SearchBar = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <div className='search'>\r\n            <input type=\"search\" placeholder={placeholder}\r\n                onChange={handleChange} />\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBar } from \"./components/searchBar/searchBar.component\";\nimport './components/card-list/card-list.style.css';\nimport './App.css';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchBar: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  render() {\n    const { monsters, searchBar } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchBar.toLocaleLowerCase()));\n    return (\n      <div className=\"App\" >\n        <h1>Monsters Rolodex</h1>\n        <SearchBar placeholder=\"search monsters..\"\n          handleChange={e => { this.setState({ searchBar: e.target.value }, () => console.log(this.state)) }} />\n        <CardList monsters={filteredMonsters} />\n      </div >\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}